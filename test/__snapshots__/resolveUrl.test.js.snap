// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`resolveUrl errors while resolving should throw when a computed property is passed 1`] = `
"test.js: ./src/resolveUrl.macro: Expected a non-computed identifier

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl('three-params', 'one', 'two', { ['thi' + 'rd']: three });
    |                                            ^
"
`;

exports[`resolveUrl errors while resolving should throw when a method is passed 1`] = `
"test.js: ./src/resolveUrl.macro: Expected a property that is not a method

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl('three-params', 'one', 'two', { third() {} });
    |                                            ^
"
`;

exports[`resolveUrl errors while resolving should throw when a number property is passed 1`] = `
"test.js: ./src/resolveUrl.macro: Expected an identifier as a property name, not a number

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl('three-params', 'one', 'two', { 3: three });
    |                                            ^
"
`;

exports[`resolveUrl errors while resolving should throw when a param is duplicated 1`] = `
"test.js: ./src/resolveUrl.macro: Named parameter \\"third\\" overrides the value from the preceeding arguments (in \\"params/three/\${first}-\${second}/\${third}/\\")

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl('three-params', 'one', 'two', 'third', { third: three });
    |                                                     ^
"
`;

exports[`resolveUrl errors while resolving should throw when a string property is passed 1`] = `
"test.js: ./src/resolveUrl.macro: Expected an identifier as a property name, not a string

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl('three-params', 'one', 'two', { 'third': three });
    |                                            ^
"
`;

exports[`resolveUrl errors while resolving should throw when an argument is passed after an object argument 1`] = `
"test.js: ./src/resolveUrl.macro: No more parameters should appear after an object parameter

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl('three-params', 'one', 'two', { third: three }, 'foobar');
    |                                                            ^
"
`;

exports[`resolveUrl errors while resolving should throw when an unknown param is passed (more params) 1`] = `
"test.js: ./src/resolveUrl.macro: Unknown parameter \\"foobar\\", expected one of: \\"first\\", \\"second\\" or \\"third\\" (in \\"params/three/\${first}-\${second}/\${third}/\\")

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl('three-params', 'one', 'two', { third: three, foobar: 42 });
    |                                                          ^
"
`;

exports[`resolveUrl errors while resolving should throw when an unknown param is passed 1`] = `
"test.js: ./src/resolveUrl.macro: Unknown parameter \\"foobar\\", none were expected (in \\"params/zero/\\")

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl('no-params', { foobar: 42 });
    |                           ^
"
`;

exports[`resolveUrl errors while resolving should throw when the URL name is unknown 1`] = `
"test.js: ./src/resolveUrl.macro: A URL with name \\"dunno\\" was not found

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl('dunno');
    |            ^
"
`;

exports[`resolveUrl errors while resolving should throw when the number of params is greater than expected 1`] = `
"test.js: ./src/resolveUrl.macro: URL \\"no-params\\" accepts at most 0 parameters but more were found (in \\"params/zero/\\")

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl('no-params', 42);
    |                         ^
"
`;

exports[`resolveUrl errors while resolving should throw when the number of params is greater than expected 2`] = `
"test.js: ./src/resolveUrl.macro: URL \\"three-params\\" accepts at most 3 parameters but more were found (in \\"params/three/\${first}-\${second}/\${third}/\\")

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl('three-params', 'one', 'two', 'three', 'oops');
    |                                                   ^
"
`;

exports[`resolveUrl errors while resolving should throw when the number of params is less than expected 1`] = `
"test.js: ./src/resolveUrl.macro: Missing values for parameters: \\"second\\", \\"third\\" (in \\"params/three/\${first}-\${second}/\${third}/\\")

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl('three-params', 42);
    | ^
"
`;

exports[`resolveUrl invalid usage should throw when not used as a call (with property) 1`] = `
"test.js: ./src/resolveUrl.macro: \`resolve\` should be called like a function

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl.something;
    | ^
"
`;

exports[`resolveUrl invalid usage should throw when not used as a call 1`] = `
"test.js: ./src/resolveUrl.macro: \`resolve\` should be called like a function

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl;
    | ^
"
`;

exports[`resolveUrl invalid usage should throw when the URL param is not a string 1`] = `
"test.js: ./src/resolveUrl.macro: The URL name should be a string literal

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl(42);
    |            ^
"
`;

exports[`resolveUrl invalid usage should throw when the params are missing 1`] = `
"test.js: ./src/resolveUrl.macro: Missing the argument with URL name

  1 | const resolveUrl = require('./src/resolveUrl.macro');
> 2 | resolveUrl();
    | ^
"
`;
